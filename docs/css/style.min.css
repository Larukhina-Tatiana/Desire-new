/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */*,::after,::before{box-sizing:border-box;box-sizing:inherit}html{-moz-tab-size:4;-o-tab-size:4;tab-size:4;line-height:1.15;-webkit-text-size-adjust:100%;box-sizing:border-box}body{font-family:system-ui,-apple-system,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji"}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,"Liberation Mono",Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:ButtonText dotted 1px}:-moz-ui-invalid{box-shadow:none}legend,ol[class],ul[class]{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}:root{--white:#FFFFF0;--link:rgba(54, 56, 56, 0.9033);--gray:#DFDFDF;--title:#363838;--default:#5A5A5A;--accent:rgba(255, 239, 53, .9);--dove-gray:#707070;--line:#979797;--top-bg:#F1D152;--black:#000000}.menu__link,.rightside-menu__title,.section__title,.top__slider-title{font-family:Montserrat,sans-serif;font-weight:700}.menu__item:after,.menu__item:before,.menu__link:before{content:"";position:absolute;height:33.33%;width:0%;background-color:var(--accent);transition:.45s}body,html{height:100%}ul[class]{list-style:none}img{max-width:100%;display:block}button,input,select,textarea{font:inherit}a{display:block;text-decoration:none}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,h5,h6,li,ol,p,ul{margin:0;padding:0}body{font-family:OpenSans,sans-serif;font-weight:400;font-size:16px;line-height:1.6875;color:var(--default);overflow-x:hidden;min-width:300px}button{padding:0;margin:0;color:inherit;font-family:inherit;font-size:inherit;background-color:transparent;cursor:pointer;border:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;-webkit-appearance:button;-moz-appearance:button;appearance:button}.wrapper{display:flex;flex-direction:column;min-height:100vh;min-height:calc(100vh - env(safe-area-inset-bottom));outline:red solid 1px}.main{flex:1 0 auto}.footer{flex:0 0 auto}.container{max-width:1140px;margin:0 auto;padding:0 15px;outline:red solid 1px}.container-fluid{max-width:1920px;padding:0 10px;margin:0 auto}.section__title{font-size:60px;line-height:1.3333333333;color:var(--title)}@media screen and (width < 881px){.section__title{font-size:34px}}.visually-hidden{position:absolute;white-space:nowrap;width:1px;height:1px;overflow:hidden;border:0;padding:0;clip:rect(0 0 0 0);clip-path:inset(50%);margin:-1px}@font-face{font-family:OpenSans;font-display:swap;src:url(../fonts/OpenSans-LightItalic.woff2) format("woff2"),url(../fonts/OpenSans-LightItalicr.woff) format("woff");font-weight:300;font-style:italic}@font-face{font-family:OpenSans;font-display:swap;src:url(../fonts/OpenSans-Regular.woff2) format("woff2"),url(../fonts/OpenSans-Regular.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:OpenSans;src:url(../fonts/OpenSans-SemiBold.woff2) format("woff2"),url(../fonts/OpenSans-SemiBold.woff) format("woff");font-display:swap;font-weight:600;font-style:normal}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat-Bold.woff2) format(woff2),url(../fonts/Montserrat-Bold.woff) format(woff);font-display:swap;font-weight:700;font-style:normal}.icon{display:block;fill:transparent;stroke:transparent;color:currentColor;fill:currentColor;transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1);flex-shrink:0}.icon--menu{width:37px;height:29px}.icon--inst{width:12px;height:12px}.icon--fb{width:24px;height:24px}.icon--you{width:12px;height:10px}.icon--phone{display:inline-block;margin-right:9px;width:14px;height:14px}.icon--arrow-left,.icon--arrow-right{display:inline-block;width:clamp(1.25rem,.98rem + 1.35vw,2.5rem)!important;height:clamp(.875rem,.74rem + .68vw,1.5rem)!important}.icon--arrow-down{display:inline-block;margin-left:16px;width:8px;height:13px}.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;display:block;overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translate3d(0,0,0)}.slick-track{position:relative;top:0;left:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{display:table;content:""}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{display:none;float:left;height:100%;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.header{padding-block:29px}.header__inner{display:flex;justify-content:space-between;align-items:center}.header__btn{color:var(--black);transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1)}.header__btn-menu{display:none}.header__btn-menu span{display:block;width:30px;height:3px;background-color:var(--title);border-radius:4px;margin-bottom:6px}@media screen and (width < 1024px){.header__btn,.rightside-menu.rightside-menu--close{display:none}}@media screen and (width < 541px){.header{padding-top:20px;margin-bottom:30px}.header__inner-btn--open{flex-wrap:wrap}.header__inner-btn--open .header__btn-menu{order:-1}.header__btn-menu{display:block;position:relative;z-index:12}}.menu__list{display:flex;gap:60px}.menu__list--margin{margin-left:32px;margin-right:60px}.menu__list--margin-right{margin-right:44px}.menu__item{position:relative;height:100%}.menu__item:before{right:0;bottom:33.33%}.menu__item:after{left:0;bottom:0}.menu__link{position:relative;padding-block:20px;padding-inline:10px;line-height:1.375;text-align:center;color:var(--link);transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1);z-index:1}.menu__link:before{left:0;bottom:66.66%}.menu--active{position:relative}.menu--active::after{position:absolute;content:"";width:100%;height:2px;background-color:rgba(54,56,56,.7);border-radius:1px;left:0;right:0;bottom:40px}@media screen and (width < 769px){.menu__list{gap:20px}.menu__item--padding-left{padding-left:15px}.menu__item--padding-right{padding-right:15px}.menu__link{padding:20px 5px}.menu__link--active::after{bottom:0}}.logo{transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1)}@media (any-hover:hover){.header__btn:hover{transform:scale(1.07)}.menu__item:hover::after,.menu__item:hover::before{width:100%}.menu__item:hover .menu__link{text-shadow:1px 1px 5px var(--black)}.menu__item:hover .menu__link::before{width:100%}.logo:hover{transform:scale(1.07)}}@media screen and (width > 541px){.logo{margin:0 auto}}@media screen and (width < 541px){.menu{visibility:hidden;opacity:0;padding-right:0;width:100%;background-color:#fff;position:absolute;top:20px;z-index:11;transform:translateY(-350px);transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1);animation:.7s opac}@keyframes opac{from{opacity:0}to{opacity:1}}.menu--open{display:block;visibility:visible;opacity:1;transform:translateY(30px);backdrop-filter:blur(19px);background-color:rgba(255,255,255,.04);border:5px solid rgba(255,255,255,.07)}.menu__list{display:block}.menu__item{padding-left:0;padding-right:0}.menu__link--active::after{display:none}.logo{order:-1;position:relative;z-index:12}}.rightside-menu{position:fixed;top:0;right:0;bottom:0;max-width:694px;width:100%;padding-top:40px;background:#fff;box-shadow:-2px 3px 17px 0 #000;z-index:5;transition-duration:550ms;transition-timing-function:cubic-bezier(.4,0,.2,1)}.rightside-menu.rightside-menu--close{transform:translateX(500%)}.rightside-menu__close{margin-left:50px;margin-bottom:30px;text-align:left}.rightside-menu__content{max-width:485px;margin:0 auto;text-align:center}.rightside-menu__logo{display:inline-block;margin-bottom:40px}.rightside-menu__title{font-size:36px;line-height:1.4166666667;color:var(--title)}.rightside-menu__line{width:252px;height:1px;margin-bottom:17px;background:#6d7278;border:1px solid #979797}.rightside-menu__text{margin-bottom:75px}.rightside-menu__img{max-width:485px}.top{margin-bottom:87px;position:relative;overflow:visible}.top::after{content:"";position:absolute;background-image:-webkit-image-set(url("../images/convert/hero/main_slider.avif") type("image/avif"), url("../images/convert/hero/main_slider.webp") type("image/webp"), url("../images/convert/hero/main_slider.jpeg"));background-image:image-set(url("../images/convert/hero/main_slider.avif") type("image/avif"), url("../images/convert/hero/main_slider.webp") type("image/webp"), url("../images/convert/hero/main_slider.jpeg"));background-position:center;background-repeat:no-repeat;width:100%;height:722px;z-index:-1;top:0}.top__slider{padding-top:175px}.top__slider-item{display:flex!important;justify-content:center;align-items:center}.top__slider-content{display:flex;flex-direction:column;gap:26px;align-items:flex-end;padding-right:50px}.top__slider-info{max-width:645px;margin-left:25px}.top__slider-img{max-width:703px;height:815px;-o-object-fit:cover;object-fit:cover}.top__slider-title{display:inline-flex;position:relative;padding-bottom:30px;font-size:110px;line-height:1.2;color:var(--title);text-wrap:balance;width:-moz-min-content;width:min-content}.top__slider-title::after{position:absolute;content:"";width:185px;height:1px;background-color:var(--line);left:0;bottom:0}.top__slider-text{max-width:568px}.img-container{width:458px;height:717px;background-color:var(--top-bg);flex-shrink:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
